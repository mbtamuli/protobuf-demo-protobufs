name: Release protobufs

on:
  push:
    tags: v[0-9]+.[0-9]+.[0-9]+
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Checkout go-sdk
      uses: actions/checkout@v2
      with:
        repository: mbtamuli/protobuf-demo-go-sdk
        token: ${{ secrets.BOT_TOKEN }}
        path: go-sdk

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Install dependencies
      run: |
        PROTOC_ZIP=protoc-${PROTOC_VERSION}-linux-x86_64.zip
        curl -sOL https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/$PROTOC_ZIP > /dev/null
        unzip -qq $PROTOC_ZIP
        sudo mv bin/protoc /usr/local/bin/
        rm -f $PROTOC_ZIP readme.txt include bin
        go get -u github.com/golang/protobuf/protoc-gen-go
        gh config set prompt disabled
      env:
        PROTOC_VERSION: 3.14.0

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
      with:
        limit-access-to-actor: true

    - name: Compile protobufs
      run: |
        make regenerate-protobuf-classes
        mkdir -p go-sdk/pb
        mv pb/* go-sdk/pb/

    - name: Create PR for go-sdk
      run: |
        set -x
        cd go-sdk
        git config user.name "techfreak-bot"
        git config user.email "34467411+techfreak-bot@users.noreply.github.com"
        TAG=${GITHUB_REF##*/}
        BRANCH_NAME="protobuf-${TAG}-PR"
        existed_in_remote=$(git ls-remote --heads origin ${BRANCH_NAME})
        if [[ -z ${existed_in_remote} ]]; then
          gh api repos/:owner/:repo/git/refs \
          --raw-field ref=refs/heads/${BRANCH_NAME} \
          --raw-field sha="$(git rev-parse --verify HEAD)"
        fi
        git fetch origin
        git checkout ${BRANCH_NAME}
        git add .
        git commit -m "Update protobufs to ${TAG}"
        git push origin ${BRANCH_NAME}
        gh pr create --title "Update protobufs to ${TAG}" --body "ATTENTION: Must keep Go SDK and PHP SDK tags in sync"
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}